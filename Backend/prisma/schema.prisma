// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  gpt
}

enum ServiceStatus {
  pending
  zohosync
  failed
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  mobileNo     String         @unique
  email        String         @unique
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  chatSessions ChatSession[]
  services     Service[]
}

model ChatSession {
  id         Int           @id @default(autoincrement())
  sessionId  String        @unique @default(uuid())
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  messages   ChatMessage[]
  service    Service?      @relation("SessionToService") // ðŸ‘ˆ One-to-one optional
}

model ChatMessage {
  id         Int           @id @default(autoincrement())
  session    ChatSession   @relation(fields: [sessionId], references: [id])
  sessionId  Int
  role       Role
  message    String
  createdAt  DateTime      @default(now())
}

model Service {
  id             Int           @id @default(autoincrement())
  session        ChatSession   @relation("SessionToService", fields: [sessionId], references: [id])
  sessionId      Int           @unique // ðŸ‘ˆ Only one service per session
  user           User          @relation(fields: [userId], references: [id])
  userId         Int
  serviceType    String
  cancerType     String
  preferredDate  String
  preferredTime  String
  notes          String?
  status         ServiceStatus @default(pending)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}